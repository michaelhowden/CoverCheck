"use strict";var ApplicationConfiguration=function(){var applicationModuleName="coverchecker",applicationModuleVendorDependencies=["ngResource","ngCookies","ngAnimate","ngTouch","ngSanitize","ui.router","ui.bootstrap","ui.utils"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("criteria"),ApplicationConfiguration.registerModule("metrics"),ApplicationConfiguration.registerModule("users"),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","$http","Authentication","Criteria",function($scope,$http,Authentication,Criteria){function handleNoGeolocation(errorFlag){errorFlag===!0?(alert("Geolocation service failed."),initialLocation=wellington):(alert("Your browser does not support geolocation."),initialLocation=wellington),map.setCenter(initialLocation),placeSearch(initialLocation)}function placeSearch(initialLocation){var request={location:initialLocation,radius:1e4,types:["doctor","hospital"]};infowindow=new google.maps.InfoWindow;var service=new google.maps.places.PlacesService(map);service.nearbySearch(request,callback)}function callback(results,status){if(status===google.maps.places.PlacesServiceStatus.OK)for(var i=0;i<results.length;i++)createMarker(results[i])}function createMarker(place){var marker=(place.geometry.location,new google.maps.Marker({map:map,position:place.geometry.location}));google.maps.event.addListener(marker,"click",function(){infowindow.setContent(place.name),infowindow.open(map,this)})}$scope.authentication=Authentication,$scope.criteria=Criteria.query(),$scope.check=function(){for(var checkCriteria=$scope.criteria,trueCriteriumIds=[],i=0;i<checkCriteria.length;i++){var checkCriterium=checkCriteria[i];checkCriterium.check===!0&&trueCriteriumIds.push(checkCriterium._id)}$http.put("/check",{trueCriteriumIds:trueCriteriumIds}).success(function(data,status,headers,config){data.check?$scope.template="yes":$scope.template="no"})};var initialLocation,map,infowindow,wellington=new google.maps.LatLng(-41.29,174.78);$scope.initialize=function(){var browserSupportFlag,myOptions={zoom:12,mapTypeId:google.maps.MapTypeId.ROADMAP};map=new google.maps.Map(document.getElementById("map-canvas"),myOptions),navigator.geolocation?(browserSupportFlag=!0,navigator.geolocation.getCurrentPosition(function(position){initialLocation=new google.maps.LatLng(position.coords.latitude,position.coords.longitude),map.setCenter(initialLocation),placeSearch(initialLocation)},function(){handleNoGeolocation(browserSupportFlag)},{timeout:5e3})):(browserSupportFlag=!1,handleNoGeolocation(browserSupportFlag))}}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("criteria").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Criteria","criteria","dropdown","/criteria(/create)?"),Menus.addSubMenuItem("topbar","criteria","List Criteria","criteria"),Menus.addSubMenuItem("topbar","criteria","New Criterium","criteria/create")}]),angular.module("criteria").config(["$stateProvider",function($stateProvider){$stateProvider.state("listCriteria",{url:"/criteria",templateUrl:"modules/criteria/views/list-criteria.client.view.html"}).state("createCriterium",{url:"/criteria/create",templateUrl:"modules/criteria/views/create-criterium.client.view.html"}).state("viewCriterium",{url:"/criteria/:criteriumId",templateUrl:"modules/criteria/views/view-criterium.client.view.html"}).state("editCriterium",{url:"/criteria/:criteriumId/edit",templateUrl:"modules/criteria/views/edit-criterium.client.view.html"})}]),angular.module("criteria").controller("CriteriaController",["$scope","$stateParams","$location","Authentication","Criteria",function($scope,$stateParams,$location,Authentication,Criteria){$scope.authentication=Authentication,$scope.create=function(){var criterium=new Criteria({criteria:this.criteria,required_criteria:this.required_criteria});criterium.$save(function(response){$location.path("criteria/"+response._id),$scope.criteria="",$scope.required_criteria=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(criterium){if(criterium){criterium.$remove();for(var i in $scope.criteria)$scope.criteria[i]===criterium&&$scope.criteria.splice(i,1)}else $scope.criterium.$remove(function(){$location.path("criteria")})},$scope.update=function(){var criterium=$scope.criterium;criterium.$update(function(){$location.path("criteria/"+criterium._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.criteria=Criteria.query()},$scope.findOne=function(){$scope.criterium=Criteria.get({criteriumId:$stateParams.criteriumId})}}]),angular.module("criteria").factory("Criteria",["$resource",function($resource){return $resource("criteria/:criteriumId",{criteriumId:"@_id"},{update:{method:"PUT"}})}]),angular.module("metrics").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Metrics","metrics","dropdown","/metrics(/create)?"),Menus.addSubMenuItem("topbar","metrics","List Metrics","metrics"),Menus.addSubMenuItem("topbar","metrics","New Metric","metrics/create")}]),angular.module("metrics").config(["$stateProvider",function($stateProvider){$stateProvider.state("listMetrics",{url:"/metrics",templateUrl:"modules/metrics/views/list-metrics.client.view.html"}).state("createMetric",{url:"/metrics/create",templateUrl:"modules/metrics/views/create-metric.client.view.html"}).state("viewMetric",{url:"/metrics/:metricId",templateUrl:"modules/metrics/views/view-metric.client.view.html"}).state("editMetric",{url:"/metrics/:metricId/edit",templateUrl:"modules/metrics/views/edit-metric.client.view.html"})}]),angular.module("metrics").controller("MetricsController",["$scope","$stateParams","$location","Authentication","Metrics",function($scope,$stateParams,$location,Authentication,Metrics){$scope.authentication=Authentication,$scope.create=function(){var metric=new Metrics({covered:this.covered,loc:{lng:this.loc.lng,lat:this.loc.lat}});metric.$save(function(response){$location.path("metrics/"+response._id),$scope.covered="",$scope.loc.lng="",$scope.loc.lat=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(metric){if(metric){metric.$remove();for(var i in $scope.metrics)$scope.metrics[i]===metric&&$scope.metrics.splice(i,1)}else $scope.metric.$remove(function(){$location.path("metrics")})},$scope.update=function(){var metric=$scope.metric;metric.$update(function(){$location.path("metrics/"+metric._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.metrics=Metrics.query()},$scope.findOne=function(){$scope.metric=Metrics.get({metricId:$stateParams.metricId})}}]),angular.module("metrics").factory("Metrics",["$resource",function($resource){return $resource("metrics/:metricId",{metricId:"@_id"},{update:{method:"PUT"}})}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invalid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(provider){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(response){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);